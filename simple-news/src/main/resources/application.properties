spring.application.name=simple-news
spring.profiles.active=local
server.port=8080
#server.servlet.context-path=/news
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB

#/error mapping at a global servlet container level.
#server.error.include-message=always
#server.error.include-exception=true
#server.error.include-stacktrace=always
#server.error.include-binding-errors=always

# ------------------------------- SpringDoc配置 -------------------------------#
#https://springdoc.org/properties.html
#https://springdoc.org/index.html#how-are-overloaded-methods-with-the-same-endpoints-but-with-different-parameters
#http://localhost:8080/springdoc/docs.html
# Packages to include
#springdoc.packagesToScan=com.package1, com.package2
# Paths to include
springdoc.pathsToMatch=/healthz, /api/**

springdoc.writer-with-default-pretty-printer=true

springdoc.api-docs.enabled=true
springdoc.api-docs.path=/springdoc/api-docs
springdoc.resolve-schema-properties=true

springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/springdoc/docs.html

#springdoc.swagger-ui.configUrl=/springdoc/api-docs
#springdoc.swagger-ui.configUrl=http://localhost:8080/springdoc/api-docs
springdoc.swagger-ui.url=/springdoc/api-docs
#springdoc.swagger-ui.url=http://localhost:8080/springdoc/api-docs
springdoc.swagger-ui.displayRequestDuration=true
springdoc.swagger-ui.showExtensions=true
springdoc.swagger-ui.showCommonExtensions=true
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.operationsSorter=method

swagger.application-name=${spring.application.name}
swagger.application-version=1.0
swagger.application-description=springdoc openapi Demo
#swagger.try-host=/nginx-prefix
swagger.try-host=http://localhost:8080
# ------------------------------- swagger配置结束 -------------------------------#

spring.data.mongodb.uri=mongodb://localhost:27017/newsdb?retryWrites=false
spring.data.mongodb.auto-index-creation=true

# ------------------------------- h2 start -------------------------------#
spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.url=jdbc:h2:file:/data/testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#enabling the H2 console
#http://localhost:8080/h2-console
spring.h2.console.enabled=true
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=true

#This will ensure that script-based initialization is performed using schema.sql and data.sql directly.
spring.jpa.hibernate.ddl-auto=none

#This will ensure, that after Hibernate schema creation is performed then additionally schema.sql and data.sql.
#spring.jpa.defer-datasource-initialization=true

# ------------------------------- h2 end -------------------------------#

# ------------------------------- scheduler start -------------------------------#
scheduling.enabled=true
scheduling.poolSize=3
scheduling.prefix=scheduling-
scheduling.fixedtask.interval=PT02S
scheduling.fixedtask.cron=0,10,20,30,40,50 * * * * *
scheduling.distributedlock.cron=0,5,10,15,20,25,30,35,40,45,50,55 * * * * *
scheduling.houseKeeper.cron=0,10,20,30,40,50 * * * * ?
scheduling.statusflow.cron=0,10,20,30,40,50 * * * * ?
# ------------------------------- scheduler end -------------------------------#

# ------------------------------- async config start -------------------------------#
#spring.task.execution.pool.core-size=2
asyncpool.corePoolSize=2
asyncpool.maxPoolSize=5
asyncpool.queueCapacity=10
asyncpool.keepAliveSeconds=60
asyncpool.waitForComplete=false

# ------------------------------- async config start -------------------------------#
