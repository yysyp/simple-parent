apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app
  name: ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ngx
  template:
    metadata:
      labels:
        app: ngx
    spec:
      volumes:
        - name: html
          emptyDir: {}
        - name: nginx-config
          configMap:
            name: nginx-config
      containers:
        - name: 1st
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: html
              mountPath: /usr/share/nginx/html
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
        - name: 2nd
          image: debian
          volumeMounts:
            - name: html
              mountPath: /html
          command: ["/bin/sh", "-c"]
          args:
            - for number in 1 2 3 4 5; do
                date >> /html/index.html;
                sleep 5;
              done
            #- while true; do
            #    date >> /html/index.html;
            #    sleep 5;
            #  done

#kubectl exec ngx -c 1st -n app -- /bin/cat /usr/share/nginx/html/index.html
#kubectl exec ngx -c 2nd -n app -- /bin/cat /html/index.html
#kubectl exec -it ngx -n app -c 1st -- bash
#kubectl exec -it ngx -n app -c 1st -- sh

---

apiVersion: v1
kind: ConfigMap
metadata:
  namespace: app
  name: nginx-config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }


    http {
        client_max_body_size 1024M;

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        #server {
        #    listen 80;
        #    server_name  qa-easy.easy111happy.cn;
        #    #rewrite ^(.*)$ https://${server_name}$1 permanent;
        #}

        server {
            listen 80;
            server_name  ypsong.me;
            #access_log  logs/access.log  main;
            index index.html;
            root /usr/share/nginx/html;

            location /testbaidu {
                proxy_pass http://baidu.com;
            }
            location /testb {
                proxy_pass http://localhost:8080;
            }
            location / {
                #proxy_pass http://localhost:10000;
                try_files $uri /index.html;
            }

        }

        include /etc/nginx/conf.d/*.conf;
    }

---

apiVersion: v1
kind: Service
metadata:
  namespace: app
  name: ngxsvc
  labels:
    app: ngxsvc
spec:
  ports:
    - port: 8888 # between containers for service call for K8s
      targetPort: 80 # container port
      nodePort: 31888 # by default >30000 for external call
  type: NodePort
  selector:
    app: ngx
